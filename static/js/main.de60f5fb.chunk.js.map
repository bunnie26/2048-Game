{"version":3,"sources":["components/Header/index.js","utils/getColours.js","components/Block/index.js","components/Board/index.js","components/Frontpage/Frontpage.js","components/Frontpage/index.js","Hooks/useEvent.js","Hooks/useLocalStorage.js","utils/getNewPosition.js","utils/isExist.js","components/ActionPanel/index.js","components/Popup/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","score","best","onClickNewGame","className","onClick","getColour","num","Block","style","background","color","Board","data","id","map","row","rowIndex","key","index","FrontPage","window","location","href","App1","class","useEvent","event","handler","passive","useEffect","addEventListener","removeEventListener","useLocalStorage","initialValue","useState","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","getNewPosition","Math","floor","random","isExist","array","term","found","i","length","some","nop","ActionPanel","onClickUndo","disableUndo","onClickReplay","disableReplay","onClickRedo","disableRedo","opacity","fontSize","Popup","message","buttons","btn","label","App","INITIAL_DATA","setData","newGame","setNewGame","setScore","setBest","scoreHistory","setScoreHistory","isWon","setIsWon","moveHistory","setMoveHistory","undoMoves","setUndoMoves","replayStatus","setReplayStatus","onunload","visible","popupStatus","setPopupStatus","addItem","newGrid","rand1","rand2","swipeLeft","isMove","oldGrid","newArray","cloneDeep","b","slow","fast","checkGameOver","swipeRight","swipeDown","oldData","swipeUp","initialize","max","preventDefault","keyCode","history","lastMove","pop","push","setTimeout","uMoves","nextMove","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.de60f5fb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.scss\";\r\n\r\nexport default function Header({ score, best, onClickNewGame }) {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__group\">\r\n        <h1 className=\"header__title\">2048</h1>\r\n        <div className=\"header__score-container\">\r\n          <div className=\"header__score-box\">\r\n            <span className=\"header__score-box--title\">SCORE</span>\r\n            <span>{score}</span>\r\n          </div>\r\n          <div className=\"header__score-box\">\r\n            <span className=\"header__score-box--title\">BEST</span>\r\n            <span>{best}</span>\r\n          </div>\r\n          <button className=\"header__button\" onClick={onClickNewGame}>\r\n            New Game\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"header__group\">\r\n        <p>\r\n          <center>Join the number and get to the 2048 tile!</center>\r\n        </p>\r\n\r\n        {/* <p>use arrow keys to move tiles.</p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const getColour = (num) => {\r\n  switch (num) {\r\n    case 2:\r\n      return \"#EBDCD0\";\r\n    case 4:\r\n      return \"#E9DBBA\";\r\n    case 8:\r\n      return \"#E9A067\";\r\n    case 16:\r\n      return \"#F08151\";\r\n    case 32:\r\n      return \"#F2654F\";\r\n    case 64:\r\n      return \"#F1462C\";\r\n    case 128:\r\n      return \"#E7C65E\";\r\n    case 256:\r\n      return \"#E8C350\";\r\n    case 512:\r\n      return \"#E8BE40\";\r\n    case 1024:\r\n      return \"#E8BB31\";\r\n    case 2048:\r\n      return \"#E7B723\";\r\n    default:\r\n      return \"#C2B3A3\";\r\n  }\r\n};\r\n\r\nexport default getColour;\r\n","import React from \"react\";\r\nimport getColour from \"../../utils/getColours\";\r\nimport \"./Block.scss\";\r\n\r\nexport default function Block({ num }) {\r\n  return (\r\n    <div\r\n      className=\"block\"\r\n      style={{ background: getColour(num), color: num !== 0 && \"#645B52\" }}\r\n    >\r\n      {num ? num : \"\"}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Header from \"../Header\";\r\nimport Block from \"../Block\";\r\nimport \"./Board.scss\";\r\n\r\nexport default function Board({ data, score, best, onClickNewGame }) {\r\n  return (\r\n    <div className=\"board\" id=\"BunnieBoard\">\r\n      <Header score={score} best={best} onClickNewGame={onClickNewGame} />\r\n      <div className=\"board__body\">\r\n        {data.map((row, rowIndex) => {\r\n          return (\r\n            <div key={rowIndex} className=\"board__row\">\r\n              {row.map((num, index) => (\r\n                <Block num={num} key={index} />\r\n              ))}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction FrontPage() {\r\n  return (\r\n    <div className=\"main-body\">\r\n      <h1>\r\n        <span>2</span>\r\n        <span>0</span>\r\n        <span>4</span>\r\n        <span>8</span>\r\n        <span id=\"gg\">-Game</span>\r\n      </h1>\r\n\r\n      <button\r\n        onClick={() => {\r\n          window.location.href = \"#BunnieBoard\";\r\n        }}\r\n      >\r\n        Scroll down to play !\r\n      </button>\r\n      <div className=\"instructions\">\r\n        <h2>HOW TO PLAY:</h2>\r\n        <div className=\"demo\">\r\n          <li>Use your arrow keys to move the tiles. </li>\r\n          <li>Tiles with the same number merge into one when they touch. </li>\r\n          <li>Add them up to reach 2048!</li>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FrontPage;\r\n","import \"./frontpage.css\";\r\nimport FrontPage from \"./Frontpage\";\r\nimport React from \"react\";\r\n\r\nfunction App1() {\r\n  return (\r\n    <div className=\"App1\">\r\n      <div class=\"context\">\r\n        <FrontPage />\r\n      </div>\r\n      <div class=\"area\">\r\n        <ul class=\"circles\">\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App1;\r\n","import { useEffect } from \"react\";\r\n\r\nconst useEvent = (event, handler, passive = false) => {\r\n  useEffect(() => {\r\n    window.addEventListener(event, handler, passive);\r\n\r\n    return () => {\r\n      window.removeEventListener(event, handler, passive);\r\n    };\r\n  });\r\n};\r\n\r\nexport default useEvent;\r\n","import { useState } from \"react\";\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value) => {\r\n    try {\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","const getNewPosition = () => {\r\n  const rowPosition = Math.floor(Math.random() * 4);\r\n  const colPosition = Math.floor(Math.random() * 4);\r\n  return [rowPosition, colPosition];\r\n};\r\n\r\nexport default getNewPosition;\r\n","const isExist = (array, term = 0) => {\r\n  let found = false;\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    found = array[i].some((i) => i === term);\r\n    if (found) break;\r\n  }\r\n  return found;\r\n};\r\n\r\nexport default isExist;\r\n","import React from \"react\";\r\nimport { IoIosUndo, IoIosRedo, IoIosPlay } from \"react-icons/io\";\r\nimport \"./ActionPanel.scss\";\r\n\r\nconst nop = () => {};\r\n\r\nexport default function ActionPanel({\r\n  onClickUndo,\r\n  disableUndo,\r\n  onClickReplay,\r\n  disableReplay,\r\n  onClickRedo,\r\n  disableRedo\r\n}) {\r\n  return (\r\n    <div className=\"action-panel\">\r\n      <div\r\n        className=\"action-panel__group\"\r\n        style={{ opacity: disableUndo ? 0.3 : 1 }}\r\n      >\r\n        <IoIosUndo\r\n          className={\r\n            !disableUndo\r\n              ? \"action-panel__button\"\r\n              : \"action-panel__button--disabled\"\r\n          }\r\n          color=\"white\"\r\n          fontSize=\"100px\"\r\n          onClick={!disableUndo ? onClickUndo : nop}\r\n        />\r\n        Undo\r\n      </div>\r\n      <div\r\n        className=\"action-panel__group\"\r\n        style={{ opacity: disableReplay ? 0.3 : 1 }}\r\n      >\r\n        <IoIosPlay\r\n          className={\r\n            !disableReplay\r\n              ? \"action-panel__button\"\r\n              : \"action-panel__button--disabled\"\r\n          }\r\n          color=\"white\"\r\n          fontSize=\"100px\"\r\n          onClick={!disableReplay ? onClickReplay : nop}\r\n        />\r\n        Replay\r\n      </div>\r\n      <div\r\n        className=\"action-panel__group\"\r\n        style={{ opacity: disableRedo ? 0.3 : 1 }}\r\n      >\r\n        <IoIosRedo\r\n          className={\r\n            !disableRedo\r\n              ? \"action-panel__button\"\r\n              : \"action-panel__button--disabled\"\r\n          }\r\n          color=\"white\"\r\n          fontSize=\"100px\"\r\n          onClick={!disableRedo ? onClickRedo : nop}\r\n        />\r\n        Redo\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Popup.scss\";\r\n\r\nexport default function Popup({ message, buttons }) {\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup__message\">{message}</div>\r\n      <div className=\"popup__footer\">\r\n        {buttons.map((btn) => (\r\n          <button className=\"popup__button\" onClick={btn.onClick}>\r\n            {btn.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Board from \"./components/Board\";\r\nimport \"./App.scss\";\r\nimport App1 from \"./components/Frontpage/index\";\r\nimport cloneDeep from \"lodash.clonedeep\";\r\nimport useEvent from \"./Hooks/useEvent\";\r\nimport useLocalStorage from \"./Hooks/useLocalStorage\";\r\nimport getNewPosition from \"./utils/getNewPosition\";\r\nimport isExist from \"./utils/isExist\";\r\nimport ActionPanel from \"./components/ActionPanel\";\r\nimport Popup from \"./components/Popup\";\r\n\r\nfunction App() {\r\n  const UP = 38;\r\n  const DOWN = 40;\r\n  const LEFT = 37;\r\n  const RIGHT = 39;\r\n  // const STOP = 27;\r\n\r\n  const INITIAL_DATA = [\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n  ];\r\n  const [data, setData] = useLocalStorage(\"data\", INITIAL_DATA);\r\n  const [newGame, setNewGame] = useLocalStorage(\"newGame\", true);\r\n  const [score, setScore] = useLocalStorage(\"score\", 0);\r\n  const [best, setBest] = useLocalStorage(\"best\", 0);\r\n  const [scoreHistory, setScoreHistory] = useLocalStorage(\"scoreHistory\", []);\r\n  const [isWon, setIsWon] = useLocalStorage(\"isWon\", false);\r\n  const [moveHistory, setMoveHistory] = useLocalStorage(\"moveHistory\", []);\r\n  const [undoMoves, setUndoMoves] = useLocalStorage(\"undoMoves\", []);\r\n  const [replayStatus, setReplayStatus] = useLocalStorage(\r\n    \"replayStatus\",\r\n    false\r\n  );\r\n  window.onunload = () => setReplayStatus(false);\r\n  const [popupStatus, setPopupStatus] = useState({\r\n    visible: false,\r\n    message: \"\",\r\n  });\r\n  // Inititalize\r\n  const initialize = () => {\r\n    let newGrid = cloneDeep(data);\r\n\r\n    addItem(newGrid);\r\n\r\n    addItem(newGrid);\r\n\r\n    setData(newGrid);\r\n    setNewGame(false);\r\n  };\r\n\r\n  // Add item\r\n  const addItem = (newGrid) => {\r\n    let [rand1, rand2] = getNewPosition(newGrid);\r\n\r\n    while (newGrid[rand1][rand2] !== 0) {\r\n      [rand1, rand2] = getNewPosition(newGrid);\r\n    }\r\n\r\n    newGrid[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\r\n  };\r\n\r\n  // Swipe action\r\n\r\n  const swipeLeft = (isMove = true) => {\r\n    let oldGrid = data;\r\n    let newArray = cloneDeep(data);\r\n\r\n    if (isWon) {\r\n      setPopupStatus({ visible: true, message: \"congratulations\" });\r\n      return;\r\n    }\r\n\r\n    if (replayStatus) {\r\n      return;\r\n    }\r\n\r\n    if (undoMoves.length) {\r\n      setUndoMoves([]);\r\n    }\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      let b = newArray[i];\r\n      let slow = 0;\r\n      let fast = 1;\r\n\r\n      while (slow < 4) {\r\n        if (fast === 4) {\r\n          fast = slow + 1;\r\n          slow++;\r\n          continue;\r\n        }\r\n        if (b[slow] === 0 && b[fast] === 0) {\r\n          fast++;\r\n        } else if (b[slow] === 0 && b[fast] !== 0) {\r\n          b[slow] = b[fast];\r\n          b[fast] = 0;\r\n          fast++;\r\n        } else if (b[slow] !== 0 && b[fast] === 0) {\r\n          fast++;\r\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\r\n          if (b[slow] === b[fast]) {\r\n            b[slow] = b[slow] + b[fast];\r\n            setScore(score + b[slow]);\r\n            b[fast] = 0;\r\n            fast = slow + 1;\r\n            slow++;\r\n          } else {\r\n            slow++;\r\n            fast = slow + 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (JSON.stringify(oldGrid) !== JSON.stringify(newArray)) {\r\n      setMoveHistory([...moveHistory, oldGrid]);\r\n      if (isExist(newArray, 2048)) {\r\n        setIsWon(true);\r\n        setData(newArray);\r\n        setPopupStatus({ visible: true, message: \"congratulations\" });\r\n      } else addItem(newArray);\r\n    } else if (!isExist(oldGrid) && isMove && checkGameOver()) {\r\n      setPopupStatus({ visible: true, message: \"Game Over\" });\r\n    }\r\n\r\n    if (isMove) {\r\n      setData(newArray);\r\n    } else return newArray;\r\n  };\r\n\r\n  const swipeRight = (isMove = true) => {\r\n    let oldGrid = data;\r\n    let newArray = cloneDeep(data);\r\n\r\n    if (isWon) {\r\n      setPopupStatus({ visible: true, message: \"congratulations\" });\r\n      return;\r\n    }\r\n\r\n    if (replayStatus) {\r\n      return;\r\n    }\r\n\r\n    if (undoMoves.length) {\r\n      setUndoMoves([]);\r\n    }\r\n\r\n    for (let i = 3; i >= 0; i--) {\r\n      let b = newArray[i];\r\n      let slow = b.length - 1;\r\n      let fast = slow - 1;\r\n\r\n      while (slow > 0) {\r\n        if (fast === -1) {\r\n          fast = slow - 1;\r\n          slow--;\r\n          continue;\r\n        }\r\n        if (b[slow] === 0 && b[fast] === 0) {\r\n          fast--;\r\n        } else if (b[slow] === 0 && b[fast] !== 0) {\r\n          b[slow] = b[fast];\r\n          b[fast] = 0;\r\n          fast--;\r\n        } else if (b[slow] !== 0 && b[fast] === 0) {\r\n          fast--;\r\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\r\n          if (b[slow] === b[fast]) {\r\n            b[slow] = b[slow] + b[fast];\r\n            setScore(score + b[slow]);\r\n            b[fast] = 0;\r\n            fast = slow - 1;\r\n            slow--;\r\n          } else {\r\n            slow--;\r\n            fast = slow - 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (JSON.stringify(oldGrid) !== JSON.stringify(newArray)) {\r\n      setMoveHistory([...moveHistory, oldGrid]);\r\n      if (isExist(newArray, 2048)) {\r\n        setIsWon(true);\r\n        setData(newArray);\r\n        setPopupStatus({ visible: true, message: \"Congratulations\" });\r\n        return;\r\n      } else addItem(newArray);\r\n    } else if (!isExist(oldGrid) && isMove && checkGameOver()) {\r\n      setPopupStatus({ visible: true, message: \"Game Over\" });\r\n    }\r\n\r\n    if (isMove) {\r\n      setData(newArray);\r\n    } else return newArray;\r\n  };\r\n\r\n  const swipeDown = (isMove = true) => {\r\n    let b = [...data];\r\n    let oldData = JSON.parse(JSON.stringify(data));\r\n\r\n    if (isWon) {\r\n      setPopupStatus({ visible: true, message: \"congratulations\" });\r\n      return;\r\n    }\r\n\r\n    if (replayStatus) {\r\n      return;\r\n    }\r\n\r\n    if (undoMoves.length) {\r\n      setUndoMoves([]);\r\n    }\r\n\r\n    for (let i = 3; i >= 0; i--) {\r\n      let slow = b.length - 1;\r\n      let fast = slow - 1;\r\n\r\n      while (slow > 0) {\r\n        if (fast === -1) {\r\n          fast = slow - 1;\r\n          slow--;\r\n          continue;\r\n        }\r\n\r\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\r\n          fast--;\r\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\r\n          b[slow][i] = b[fast][i];\r\n          b[fast][i] = 0;\r\n          fast--;\r\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\r\n          fast--;\r\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\r\n          if (b[slow][i] === b[fast][i]) {\r\n            b[slow][i] = b[slow][i] + b[fast][i];\r\n            setScore(score + b[slow][i]);\r\n            b[fast][i] = 0;\r\n            fast = slow - 1;\r\n            slow--;\r\n          } else {\r\n            slow--;\r\n            fast = slow - 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (JSON.stringify(oldData) !== JSON.stringify(b)) {\r\n      setMoveHistory([...moveHistory, oldData]);\r\n      if (isExist(b, 2048)) {\r\n        setIsWon(true);\r\n        setData(b);\r\n        setPopupStatus({ visible: true, message: \"congratulations\" });\r\n      } else addItem(b);\r\n    } else if (!isExist(oldData) && isMove && checkGameOver()) {\r\n      setPopupStatus({ visible: true, message: \"Game Over\" });\r\n    }\r\n\r\n    if (isMove) {\r\n      setData(b);\r\n    } else return b;\r\n  };\r\n\r\n  const swipeUp = (isMove = true) => {\r\n    let b = [...data];\r\n    let oldData = JSON.parse(JSON.stringify(data));\r\n\r\n    if (isWon) {\r\n      setPopupStatus({ visible: true, message: \"congratulations\" });\r\n      return;\r\n    }\r\n\r\n    if (replayStatus) {\r\n      return;\r\n    }\r\n\r\n    if (undoMoves.length) {\r\n      setUndoMoves([]);\r\n    }\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      let slow = 0;\r\n      let fast = 1;\r\n\r\n      while (slow < 4) {\r\n        if (fast === 4) {\r\n          fast = slow + 1;\r\n          slow++;\r\n          continue;\r\n        }\r\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\r\n          fast++;\r\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\r\n          b[slow][i] = b[fast][i];\r\n          b[fast][i] = 0;\r\n          fast++;\r\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\r\n          fast++;\r\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\r\n          if (b[slow][i] === b[fast][i]) {\r\n            b[slow][i] = b[slow][i] + b[fast][i];\r\n            setScore(score + b[slow][i]);\r\n            b[fast][i] = 0;\r\n            fast = slow + 1;\r\n            slow++;\r\n          } else {\r\n            slow++;\r\n            fast = slow + 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (JSON.stringify(oldData) !== JSON.stringify(b)) {\r\n      setMoveHistory([...moveHistory, oldData]);\r\n      if (isExist(b, 2048)) {\r\n        setIsWon(true);\r\n        setData(b);\r\n        setPopupStatus({ visible: true, message: \"congratulations\" });\r\n      } else addItem(b);\r\n    } else if (!isExist(oldData) && isMove && checkGameOver()) {\r\n      setPopupStatus({ visible: true, message: \"Game Over\" });\r\n    }\r\n\r\n    if (isMove) {\r\n      setData(b);\r\n    } else return b;\r\n  };\r\n\r\n  const checkGameOver = () => {\r\n    if (JSON.stringify(data) !== JSON.stringify(swipeLeft(false))) {\r\n      return false;\r\n    } else if (JSON.stringify(data) !== JSON.stringify(swipeRight(false))) {\r\n      return false;\r\n    } else if (JSON.stringify(data) !== JSON.stringify(swipeUp(false))) {\r\n      return false;\r\n    } else if (JSON.stringify(data) !== JSON.stringify(swipeDown(false))) {\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  // Reset, New Game\r\n  const onClickNewGame = () => {\r\n    setScoreHistory([...scoreHistory, score]);\r\n    setMoveHistory([]);\r\n    setUndoMoves([]);\r\n    setIsWon(false);\r\n    setNewGame(true);\r\n    setScore(0);\r\n    setData(INITIAL_DATA);\r\n  };\r\n\r\n  // Undo\r\n  const onClickUndo = () => {\r\n    const history = cloneDeep(moveHistory);\r\n    const lastMove = history.pop();\r\n    setMoveHistory(history);\r\n    setUndoMoves([...undoMoves, data]);\r\n    setData(lastMove);\r\n  };\r\n\r\n  // Replay\r\n  const onClickReplay = () => {\r\n    setReplayStatus(true);\r\n    const history = cloneDeep(moveHistory);\r\n    history.push(data);\r\n    for (let i = 0; i < history.length; i++) {\r\n      setTimeout(() => {\r\n        console.log(\"replay in progress\", i);\r\n        setData(history[i]);\r\n        if (i === history.length - 1) {\r\n          setReplayStatus(false);\r\n        }\r\n      }, i * 1000);\r\n    }\r\n  };\r\n\r\n  // Redo\r\n  const onClickRedo = () => {\r\n    const history = cloneDeep(moveHistory);\r\n    const uMoves = cloneDeep(undoMoves);\r\n    const nextMove = uMoves.pop();\r\n    history.push(data);\r\n    setMoveHistory(history);\r\n    setUndoMoves(uMoves);\r\n    setData(nextMove);\r\n  };\r\n\r\n  // popup ok\r\n  const onClickOk = () => {\r\n    setPopupStatus({ ...popupStatus, visible: false });\r\n  };\r\n\r\n  // popup try\r\n  const onClickTry = () => {\r\n    setPopupStatus({ ...popupStatus, visible: false });\r\n    onClickNewGame();\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    event.preventDefault();\r\n    switch (event.keyCode) {\r\n      case UP:\r\n        swipeUp();\r\n        break;\r\n      case DOWN:\r\n        swipeDown();\r\n        break;\r\n      case LEFT:\r\n        swipeLeft();\r\n        break;\r\n      case RIGHT:\r\n        swipeRight();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (newGame) {\r\n      initialize();\r\n    }\r\n  }, [newGame]);\r\n\r\n  useEffect(() => {\r\n    setBest(Math.max(...scoreHistory, score));\r\n  }, [score]);\r\n\r\n  useEvent(\"keydown\", handleKeyDown);\r\n\r\n  return (\r\n    <div>\r\n      <App1 />\r\n      <div className=\"container\">\r\n        {/* <h2>2048 GAME</h2> */}\r\n        <Board\r\n          data={data}\r\n          score={score}\r\n          best={best}\r\n          onClickNewGame={onClickNewGame}\r\n        />\r\n        <div className=\"container__action\">\r\n          <ActionPanel\r\n            onClickUndo={onClickUndo}\r\n            disableUndo={!moveHistory.length || replayStatus || isWon}\r\n            onClickReplay={onClickReplay}\r\n            disableReplay={replayStatus || !moveHistory.length}\r\n            onClickRedo={onClickRedo}\r\n            disableRedo={!undoMoves.length || replayStatus}\r\n          />\r\n        </div>\r\n        {popupStatus.visible && (\r\n          <Popup\r\n            message={popupStatus.message}\r\n            buttons={[\r\n              {\r\n                label: \"ok\",\r\n                onClick: onClickOk,\r\n              },\r\n              {\r\n                label: isWon ? \"new game\" : \"try again\",\r\n                onClick: onClickTry,\r\n              },\r\n            ]}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}